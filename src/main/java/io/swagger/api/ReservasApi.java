/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;

import javax.annotation.Generated;
import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.Reserva;

@Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-12T19:52:47.566Z")

@Api(value = "reservas", description = "Gestionar reservas", tags="Reservas")
public interface ReservasApi {

    @ApiOperation(value = "Actualizar reserva por ID", nickname = "actualizarReserva", notes = "", tags={ "Reservas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Peticion incorrecta", response = Error.class),
        @ApiResponse(code = 404, message = "Reserva no encontrada", response = Error.class) })
    @RequestMapping(value = "/reservas/{idReserva}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> actualizarReserva(@ApiParam(value = "ID de la reserva a actualizar",required=true) @PathVariable("idReserva") Integer idReserva,@ApiParam(value = "Nuevos Datos de la reserva" ,required=true )  @Valid @RequestBody Reserva reserva);


    @ApiOperation(value = "Agregar reserva", nickname = "agregarReserva", notes = "Agrega una reserva al sistema\"", tags={ "Reservas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Reserva agregada correctamente"),
        @ApiResponse(code = 409, message = "Ya existe una reserva para ese dia y sala", response = Error.class) })
    @RequestMapping(value = "/reservas",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> agregarReserva(@ApiParam(value = "Datos de la nueva reserva" ,required=true )  @Valid @RequestBody Reserva reserva);


    @ApiOperation(value = "Borra una reserva por ID", nickname = "borrarReservaPorID", notes = "", tags={ "Reservas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Peticion incorrecta", response = Error.class),
        @ApiResponse(code = 404, message = "Reserva no encontrada", response = Error.class) })
    @RequestMapping(value = "/reservas/{idReserva}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> borrarReservaPorID(@ApiParam(value = "ID de la reserva a borrar",required=true) @PathVariable("idReserva") Integer idReserva);


    @ApiOperation(value = "Busca Reserva por ID", nickname = "getReservaPorId", notes = "Devuelve una reserva por ID", response = Reserva.class, tags={ "Reservas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Reserva.class),
        @ApiResponse(code = 400, message = "Peticion incorrecta", response = Error.class),
        @ApiResponse(code = 404, message = "Reserva no encontrada", response = Error.class) })
    @RequestMapping(value = "/reservas/{idReserva}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Reserva> getReservaPorId(@ApiParam(value = "ID de la reserva a recuperar",required=true) @PathVariable("idReserva") Integer idReserva);


    @ApiOperation(value = "Busca reservas", nickname = "getReservas", notes = "Busqueda de reservas", response = Reserva.class, responseContainer = "List", tags={ "Reservas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Obtenidos correctamente las reservas buscadas", response = Reserva.class, responseContainer = "List") })
    @RequestMapping(value = "/reservas",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Reserva>> getReservas();

}
